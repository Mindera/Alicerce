name: CI

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]+'
  pull_request:
    branches:
      - master

env:
  # https://github.com/actions/virtual-environments/tree/main/images/macos
  DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer

jobs:
  env-details:
    name: Environment details
    runs-on: macOS-10.15
    steps:
      - name: xcode version
        run: xcodebuild -version -sdk

      - name: list simulators
        run: |
          xcrun simctl delete unavailable
          xcrun simctl list

  build-test:
    name: Build and Test
    runs-on: macOS-10.15
    env:
      WORKSPACE: Alicerce.xcworkspace
      SCHEME: Alicerce

      IOS_SDK: iphonesimulator
      IOS_DESTINATION: "platform=iOS Simulator,name=iPhone 12 Pro,OS=latest"

      DERIVED_DATA_PATH: build
    steps:
      - name: git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: unit tests
        run: |
          set -o pipefail
          xcodebuild clean build test \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -sdk "$IOS_SDK" \
            -destination "$IOS_DESTINATION" \
            -derivedDataPath "$DERIVED_DATA_PATH" \
            -enableCodeCoverage YES | xcpretty -c

      - name: codecov upload
        run: bash <(curl -s https://codecov.io/bash) -D $DERIVED_DATA_PATH -J "^$SCHEME$"

  swiftpm:
    name: SwiftPM Build
    runs-on: macOS-10.15
    env:
      PLATFORM_TARGET: x86_64-apple-ios14.0-simulator
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: xcode version
        run: xcodebuild -version -sdk

      - name: swift build
        run: swift build -Xswiftc "-sdk" -Xswiftc "`xcrun --sdk iphonesimulator --show-sdk-path`" -Xswiftc "-target" -Xswiftc "${PLATFORM_TARGET}"

  cocoapods:
    name: CocoaPods Verification
    runs-on: macOS-10.15
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: ruby versions
        run: |
          ruby --version
          gem --version
          bundler --version

      - name: cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gem-

      - name: bundle install
        run: |
          gem install bundler --no-document
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: pod lint
        run: bundle exec pod lib lint

  carthage:
    name: Carthage Verification
    runs-on: macos-10.15
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: carthage build
        run: ./script/carthage.sh build --cache-builds --no-skip-current

  Danger:
    name: Danger Swift
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Danger
        uses: 417-72KI/danger-swiftlint@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-github:
    name: GitHub Release
    runs-on: macOS-10.15
    needs: [build-test, swiftpm, cocoapods, carthage]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            # Changes

            - <!-- Insert changes here -->

  release-cocoapods:
    name: CocoaPods Release
    runs-on: macOS-10.15
    needs: [build-test, swiftpm, cocoapods, carthage]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: ruby versions
        run: |
          ruby --version
          gem --version
          bundler --version

      - name: cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gem-

      - name: bundle install
        run: |
          gem install bundler --no-document
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: pod trunk push
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: pod trunk push --allow-warnings
